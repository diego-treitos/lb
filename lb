#!/bin/bash
# vim: set ts=2 sw=2 sts=2 et:

error() { echo "ERROR: $*"; exit 1; }
confirm() { read -erp "$* [y/N]: " q; [ "$q" == "y" ] && return 0; return 1; }

[ -z "$EDITOR" ] && EDITOR="vim"
[ ! -f ./blog_config.sh ] && error "Configuration file 'blog_config.sh' not found in local directory."

. ./blog_config.sh
cd "$blog_dir"

p_posts="`date +%Y`" # Current year posts directory
p_drafts=".drafts"   # Post drafts before published
p_sources=".sources" # Saved sources for publised posts

if [ ! -d "$p_drafts" ] && (confirm "Initialize blog in $blog_dir?" || exit); then
	echo "Initializing blog system..."
	mkdir -pv {.drafts,.sources}
fi

if [ ! -d "$p_posts" ]; then
  mkdir "$p_posts"
  mkdir "$p_posts/assets"
  pushd "$p_posts" > /dev/null
  ln -s "../$p_posts" .
  popd > /dev/null
	echo "Options +Indexes" > "$p_posts/.htaccess"
fi

post_new() {
  read -erp "Give a title for your post: " title
	echo "$title" | grep -q "\"" && error 'Double quotation marks (") are not allowed in entry titles.'
	url=`echo "$title" | iconv -cf UTF-8 -t ASCII//TRANSLIT | tr -d '[:punct:]' | tr '[:upper:]' '[:lower:]' | tr ' ' '-' | tr '/' '_' | sed "s/-\+/-/g;s/\(^-\|-\$\)//g"`
	[ -f "$p_drafts/$url.$post_processor_ext" ] && error "There is already an existing draft entry of that same name/URL."
	[ -f "$p_posts/$url.html" ] && error "There is already an existing published entry of that same name/URL."
	echo "AddDescription \"$title\" \"$url.html\"" >> "$p_posts/.htaccess" || error "Could not write to .htaccess file."
	$EDITOR "$p_drafts/$url.$post_processor_ext" ;}

post_select() {
  filter="$2"; [ -z "$filter" ] && filter='^$'
  echo "Listing contents of $1"
  ls -rc "$1" | awk -F '/' '{print $NF}' | grep -Ev "$filter" | grep -Ev "^(assets|$p_posts)$" | nl
	read -erp "Please, select a post by number or press ctrl-c to cancel: " number
	chosen=`ls -rc "$1" | grep -Ev "$filter" | grep -Ev "^(assets|$p_posts)$" | nl | grep -w "$number" | awk '{print $2}'`
  [ -z "$chosen" ] && exit
	basefile=`basename "$chosen"` && base="${basefile%.*}" ;}

post_delete() {
	sed -i "/<item/{:a;N;/<\\/item>/!ba};/#$base<\\/guid/d" "$path_rss"
	sed -i "/<div class='entry'>/{:a;N;/<\\/small><\\/div>/!ba};/id='$base'/d" "$path_blogfile"
	sed -i "/<li>.*<a href='$p_posts\\/$base.html'>/d" "$path_blogindex"
	rm -f "$p_posts/$base".* "$p_sources/$base".* && echo "Blog post removed." ;}

post_publish() {
	post_delete
	htaccessentry=`grep "$base.html" "$p_posts/.htaccess"`
	title=`echo "$htaccessentry" | cut -d'"' -f2`
	rssdate=`grep "$base.html" "$p_posts/.htaccess" | sed "s/.*\.html\"* *#*//g" | tr -d '\n'`
	[ -z "$rssdate" ] && rssdate=`LC_ALL=en_US date '+%a, %d %b %Y %H:%M:%S %z'` # RSS date formats must comply with standards to validate.
	webdate=`LC_ALL=en_US date "$blog_dateformat"` # But this visible date you can set to any format.
  post_html=`post_processor "$p_drafts/$base.$post_processor_ext"`
	tmpdir=`mktemp -d`
	echo "<html><head><title>$title</title><link rel='stylesheet' type='text/css' href='../$path_css'><meta charset='utf-8'/></head><body class='entry'><div id='topbar'></div><h2 class='ptitle'>$title</h2><small>[<a href='../$path_blogfile#$base'>link</a>&mdash;<a href='$base.html'>standalone</a>]</small>$post_html<footer>by <strong><a href='$author_web'>$author</a></strong></footer></body></html>" > "$p_posts/$base.html"
	echo "<item><title>$title</title><guid>$blog_site/$path_blogfile#$base</guid><pubDate>$rssdate</pubDate><description><![CDATA[$post_html]]></description></item>" > "$tmpdir/rss"
	echo "<div class='entry'><h2 id='$base'>$title</h2><small>[<a href='#$base'>link</a>&mdash;<a href='$p_posts/$base.html'>standalone</a>]</small>$post_html<small class='pdate'>$webdate</small></div>" > "$tmpdir/html"
	echo "<li>`date '+%Y %b %d'` &ndash; <a href='$p_posts/$base.html'>$title</a></li>" > "$tmpdir/index"
	sed -i "/<!-- LB -->/r $tmpdir/html" "$path_blogfile"
	sed -i "/<!-- LB -->/r $tmpdir/rss" "$path_rss"
	sed -i "/<!-- LB -->/r $tmpdir/index" "$path_blogindex"
	sed -i "/ \"$base.html\"/d" "$p_posts/.htaccess"
	echo "AddDescription \"$title\" \"$base.html\" #$rssdate" >> "$p_posts/.htaccess"
  mv "$p_drafts/$base.$post_processor_ext" "$p_sources" ;}

post_edit() {
	post_file="$base.$post_processor_ext"
  [ -f "$p_drafts/$post_file" ] || cp "$p_sources/$post_file" "$p_drafts"
	"$EDITOR" "$p_drafts/$post_file"
	echo "Revision stored in $p_drafts. Publish as normal entry when desired." ;}

case "$1" in
	n*) post_new ;;
	e*) post_select "$p_drafts" && post_edit ;;
	p*) post_select "$p_drafts" && post_publish ;;
	t*) post_select "$p_drafts" && confirm "Are you sure you want to delete the draft $chosen ?" && rm -f "$p_drafts/$chosen" && sed -i "/ \"$base.html\"/d" "$p_posts/.htaccess" && echo "Draft deleted." ;;
	d*) post_select "$p_posts"  && confirm "Are you sure you want to delete the post $chosen ?" && post_delete && sed -i "/ \"$base.html\"/d" "$p_posts/.htaccess" ;;
  r*) post_select "$p_posts" && post_edit ;;
	*)
    echo "lb blog system by Luke Smith <luke@lukesmith.xyz>"
    echo "  Usage:"
    echo "    lb n:   new draft"
    echo "    lb e:   edit draft"
    echo "    lb p:   publish draft"
    echo "    lb t:   discard draft"
    echo "    lb r:   revise/edit published post"
    echo "    lb d:   delete published post"
    echo -e "\n Be sure to have the following pattern added to your RSS feed, blog file and blog index:\n\n<!-- LB -->\n\nNew content will be added directly below that sequence. This is required.\nSee https://github.com/LukeSmithxyz/lb for more.\n" ;;
esac
